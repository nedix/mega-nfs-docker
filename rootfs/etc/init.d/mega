#!/sbin/openrc-run

. /opt/mega-nfs/sandbox.sh

extra_commands="healthcheck"

CHROOT_PATH="/chroot/${RC_SVCNAME}"

depend() {
    before rclone
}

start_pre() {
    for BIN in /bin/sh /usr/bin/mega-*; do
        DIR="${CHROOT_PATH}${BIN%/*}"
        mkdir -p "$DIR"
        cp "$BIN" "$DIR"
    done

    for LIB in $(ldd /usr/bin/mega-cmd-server | awk '/=>/ {print $3}'); do
        DIR="${CHROOT_PATH}${LIB%/*}"
        mkdir -p "$DIR"
        cp "$LIB" "$DIR"
    done

    . /etc/mega/.env

    ip netns exec "$RC_SVCNAME" nft add table inet filters
    ip netns exec "$RC_SVCNAME" nft add set inet filters incoming_connlimit '{ type ipv4_addr ; size 65535 ; flags dynamic ; }'
    ip netns exec "$RC_SVCNAME" nft add set inet filters outgoing_connlimit '{ type ipv4_addr ; size 65535 ; flags dynamic ; }'
    ip netns exec "$RC_SVCNAME" nft add chain inet filters input_chain '{ type filter hook input priority 0 ; policy accept ; }'
    ip netns exec "$RC_SVCNAME" nft add chain inet filters output_chain '{ type filter hook output priority 0 ; policy accept ; }'
    ip netns exec "$RC_SVCNAME" nft add rule inet filters input_chain tcp sport '{ 80, 443 }' ct state new add @incoming_connlimit "{ ip daddr ct count over ${STREAMS} }" reject with tcp reset
    ip netns exec "$RC_SVCNAME" nft add rule inet filters output_chain tcp dport '{ 80, 443 }' ct state new add @outgoing_connlimit "{ ip saddr ct count over $(( $TRANSFERS + 1 )) }" reject with tcp reset
}

start() {
    ebegin "Starting ${RC_SVCNAME}"

    . /etc/mega/.env

    export HOME=/home

    sandbox /usr/bin/mega-login "$EMAIL" "$PASSWORD"

    ENDPOINT=$(sandbox /usr/bin/mega-webdav --public --port="1000${RC_SVCNAME##*-}" "$DIRECTORY" | awk '{print $NF}')

    echo "$ENDPOINT" > "${CHROOT_PATH}/home/endpoint"

    sed -i "s|url = #${RC_SVCNAME}-url|url = ${ENDPOINT}|" /etc/rclone/rclone.conf

    healthcheck && eend 0 || (stop; eend 1)
}

stop() {
    ebegin "Stopping ${RC_SVCNAME}"

    sandbox /usr/bin/mega-webdav -d --all

    eend $?
}

status() {
    healthcheck && eend 0 || eend 1
}

healthcheck() {
    exit 0
    (wget -q --spider $(cat "/chroot/${RC_SVCNAME}/home/endpoint")) 2> /dev/null
}
